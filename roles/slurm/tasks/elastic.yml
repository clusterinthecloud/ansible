---
- name: Install python38
  ansible.builtin.package:
    name: python38

- name: Install common tools
  ansible.builtin.pip:
    name:
      - citc[{{ ansible_local.citc.csp }}] @ https://github.com/clusterinthecloud/python-citc/releases/download/0.3.12/citc-0.3.12-py3-none-any.whl
    virtualenv: /opt/cloud_sdk
    virtualenv_command: /usr/bin/python3.8 -m venv
  register: cloud_sdk_venv

- name: Install watchdog service
  ansible.builtin.template:
    src: citc-watchdog.service.j2
    dest: /usr/lib/systemd/system/citc-watchdog.service
    mode: "0755"

- name: Create citc config dir
  ansible.builtin.file:
    path: /etc/citc
    state: directory
    owner: slurm
    group: slurm
    mode: "0755"

- name: Copy mgmt_shape.yaml
  ansible.builtin.copy:
    src: /home/opc/mgmt_shape.yaml
    dest: /etc/citc/mgmt_shape.yaml
    remote_src: true
    owner: slurm
    group: slurm
    mode: "0744"
  when: '"/home/opc/mgmt_shape.yaml" is exists'

- name: Copy shapes.yaml
  ansible.builtin.copy:
    src: /tmp/shapes.yaml
    dest: /etc/citc/shapes.yaml
    remote_src: true
    owner: slurm
    group: slurm
    mode: "0744"
  when: '"/tmp/shapes.yaml" is exists'

- name: Copy startnode.yaml
  ansible.builtin.copy:
    src: /tmp/startnode.yaml
    dest: /etc/citc/startnode.yaml
    remote_src: true
    owner: slurm
    group: slurm
    mode: "0744"

- name: Configure startnode script
  ansible.builtin.copy:
    src: startnode.py
    dest: /usr/local/bin/startnode
    mode: "0755"

- name: Configure stopnode script
  ansible.builtin.copy:
    src: stopnode.py
    dest: /usr/local/bin/stopnode
    mode: "0755"

- name: Configure update_config script
  ansible.builtin.copy:
    src: update_config.py
    dest: /usr/local/bin/update_config
    mode: "0755"

- name: Install kill_all_nodes script
  ansible.builtin.copy:
    src: kill_all_nodes.sh
    dest: /usr/local/bin/kill_all_nodes
    mode: u=rwx,g=rwx,o=rx

- name: Install ssh-keygen
  ansible.builtin.package:
    name: openssh

- name: Generate SSH host keys for compute nodespace
  community.crypto.openssh_keypair:
    type: "{{ item.type }}"
    size: "{{ item.size }}"
    path: "/home/slurm/ssh_host_{{ item.type }}_key"
    owner: slurm
    group: slurm
  with_items:
    - {"type": "ed25519", "size": 4096}
    - {"type": "rsa", "size": 4096}
    - {"type": "ecdsa", "size": 521}

- name: Load the startnode config
  ansible.builtin.slurp:
    src: /etc/citc/startnode.yaml
  register: startnode_config_data

- name: Set the startnode_config fact
  ansible.builtin.set_fact:
    startnode_config: "{{ startnode_config_data['content'] | b64decode | from_yaml }}"

- name: Install cleanup_images script
  ansible.builtin.template:
    src: cleanup_images.sh.j2
    dest: /usr/local/bin/cleanup_images
    mode: u=rwx,g=rwx,o=rx

- name: Create cloud-init bootstrap script
  ansible.builtin.copy:
    content: |
      #! /bin/bash

      date

      {% if ansible_local.citc.csp == "aws" %}
      yum install -y epel-release
      dnf install -y jq python36
      # TODO try to do this without using Python
      python3.6 -m pip install awscli
      region=$(curl --silent http://169.254.169.254/latest/dynamic/instance-identity/document | jq --raw-output '.region')
      instanceid=$(curl --silent http://169.254.169.254/latest/meta-data/instance-id)
      name=$(/usr/local/bin/aws ec2 describe-tags --region=${region} --filters "Name=resource-id,Values=${instanceid}"\
                                                  --output text --query 'Tags[?Key==`Name`].Value')
      hostnamectl set-hostname ${name}
      {% endif %}

      # Ensure that slurmd is running at this point
      systemctl start slurmd

      date
    dest: /home/slurm/bootstrap.sh
    owner: slurm
    mode: "u=rw,g=r,o="

- name: Copy list_nodes script
  ansible.builtin.copy:
    src: list_nodes.sh
    dest: /usr/local/bin/list_nodes
    mode: "0755"

- name: Start and enable service citc-watchdog
  ansible.builtin.service:
    name: citc-watchdog
    state: started
    enabled: true
  tags:
    - molecule-idempotence-notest
